#trigger:
#- master

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Install-Module xanderu.helpers -force -allowclobber -RequiredVersion '0.2.9'
      Import-Module xanderu.helpers
      # reference for keys/tokens https://docs.microsoft.com/en-us/azure/devops/artifacts/tutorials/private-powershell-library?view=azure-devops
      Publish-ToPSGallery -PSGalleryKey $(PSGalleryKey) `
          -secureRepoName 'PowershellAZDO' `
          -secureRepopublishApiKey $(AZDOPat) `
          -secureRepopublishApiURL "https://pkgs.dev.azure.com/xanderu/master/_packaging/PSRepo/nuget/v2" `
          -secureRepoUser $(emailAddr) `
          -secureRepoPass $(AZDOPat) `
          -codePath $(Build.Repository.LocalPath)

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $stageDir = '$(Build.SourcesDirectory)' | Split-Path
      $githubDir = $stageDir +"\"+"gitHub"
      $destination = 'https://github.com/Xander-Rudolph/powershell.git'
      $alias = '$(emailAddr):'+ "$(GithubPAT)"
      #Please make sure, you remove https from azure-repo-clone-url
      $sourceURL = 'https://$(AZDOPat)@<azure-repo-clone-url>'
      #Please make sure, you remove https from github-repo-clone-url
      $destURL = 'https://' + $alias + '@<github-repo-clone-url>'
      #Check if the parent directory exists and delete
      if((Test-Path -path $githubDir))
      {
        Remove-Item -Path $githubDir -Recurse -force
      }
      if(!(Test-Path -path $githubDir))
      {
        New-Item -ItemType directory -Path $githubDir
        Set-Location $githubDir
        git clone --mirror $sourceURL
      }
      else
      {
        Write-Host "The given folder path $githubDir already exists";
      }
      Set-Location $destination
      Write-Output '*****Git removing remote secondary****'
      git remote rm secondary
      Write-Output '*****Git remote add****'
      git remote add --mirror=fetch secondary $destURL
      Write-Output '*****Git fetch origin****'
      git fetch $sourceURL
      Write-Output '*****Git push secondary****'
      git push secondary --all
      Write-Output '**Azure Devops repo synced with Github repo**'
      Set-Location $stageDir
      if((Test-Path -path $githubDir))
      {
      Remove-Item -Path $githubDir -Recurse -force
      }